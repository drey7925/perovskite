// Copyright 2023 drey7925
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package perovskite.protocol.map;

import "items.proto";
import "render.proto";
import "blocks.proto";

message ExtendedData {
    // Offset in the chunk, 0..4095
    uint32 offset_in_chunk = 1;
    // Serialized data, passed to the relevant handler.
    bytes serialized_data = 2;
    // Inventories stored in a block. Stored on the server, client uses a different interface (i.e. InventoryUpdate with
    // view IDs) to get this.
    map<string, perovskite.protocol.items.Inventory> inventories = 3;
    // Simple key-value storage.
    map<string, string> simple_storage = 4;
}

message ClientExtendedData {
    // Offset in the chunk, 0..4095
    uint32 offset_in_chunk = 1;
    // Text to display.
    repeated perovskite.protocol.render.BlockText block_text = 2;
}

message ChunkV1 {
    // Array, 4096 long, containing block IDs
    repeated uint32 block_ids = 1 [packed=true];
    // Extended data; only available on the server
    repeated ExtendedData extended_data = 2;
    // Extended data as relevant to the client
    repeated ClientExtendedData client_extended_data = 3;
}

message StoredChunk {
    oneof chunk_data {
        ChunkV1 v1 = 1;
    }

    uint64 startup_counter = 127;
}